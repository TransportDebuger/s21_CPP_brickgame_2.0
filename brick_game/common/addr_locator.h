/**
 * @file addr_locator.h
 * @brief Реализация контейнера для хранения указателей на ресурсы
 * @author provemet
 * @version 2.0
 * @date March 2025
 *
 * @details Этот модуль реализует структуру универсального контейнера для
 * хранения указателей на ресурсы.
 *
 * @warning При реализации функций работающих с универсальным контейнером
 * хранения указателей на ресурсы необходимо:
 *          - при сохранении адреса в контейнере привести его к типу void*
 *          - при извлечении адреса привести его к целевому типу (например int*)
 */

#ifndef ADDR_LOCATOR_H
#define ADDR_LOCATOR_H

#include <stdbool.h>

#ifdef __cplusplus
extern "C" {
#endif

/**
 * @defgroup AddressProviders Поставщики адресов
 * @brief Структуры и методы для хранения указателей на ресурсы
 */

/**
 * @struct AddressLocator_t
 * @ingroup AddressProviders
 * @brief Универсальный контейнер для хранения указателей на ресурсы
 * @details Используется для безопасного доступа к различным системным ресурсам
 * через единый интерфейс.
 *
 * @warning При использовании локатора требуется соблюдать осторожность при
 * приведении типов:
 *          - при присвоении укажателя приведение к типу void*
 *          - при возврате к целевому типу.
 * @code
 * locator.address = (void*)variable; //приведение типа при присвоении
 * локатору 
 * int* variable = (int*)locator.address; //приведение к целевому типу
 * @endcode
 */
typedef struct {
  void* address;  ///< Универсальный указатель на ресурс (void*)
  bool is_set;    ///< Флаг инициализации (true - адрес установлен)
} AddressLocator_t;

#ifdef __cplusplus
}
#endif

#endif